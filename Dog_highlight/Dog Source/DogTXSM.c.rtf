{\rtf1\ansi\uc0 \deff1{\fonttbl{\f1\fmodern\fprq1\fcharset0 Courier New;}}{\colortbl;\red255\green255\blue255;\red51\green00\blue102;\red24\green97\blue167;\red50\green186\blue06;\red00\green102\blue51;\red00\green102\blue51;\red166\green23\blue97;\red83\green116\blue176;\red102\green51\blue00;\red154\green154\blue154;\red85\green85\blue85;\red166\green23\blue97;\red255\green48\blue48;\red244\green140\blue35;\red00\green00\blue255;\red209\green28\blue237;}
\paperw11905\paperh16837\margl1134\margr1134\margt1134\margb1134\sectd\plain\f1\fs20
\pard \cbpat1{{\cf2{}}{\cf6{/****************************************************************************}}}\par\pard
\cbpat1{{\cf6{ Module}}}\par\pard
\cbpat1{{\cf6{   Dog_TX_SM.c}}}\par\pard
\cbpat1{{\cf6{}}}\par\pard
\cbpat1{{\cf6{ Revision}}}\par\pard
\cbpat1{{\cf6{   {1}.{0}.{1}}}}\par\pard
\cbpat1{{\cf6{}}}\par\pard
\cbpat1{{\cf6{ Description}}}\par\pard
\cbpat1{{\cf6{   The receiving state machine for the Dog}}}\par\pard
\cbpat1{{\cf6{}}}\par\pard
\cbpat1{{\cf6{ Notes}}}\par\pard
\cbpat1{{\cf6{}}}\par\pard
\cbpat1{{\cf6{ History}}}\par\pard
\cbpat1{{\cf6{ When           Who     What/Why}}}\par\pard
\cbpat1{{\cf6{ -------------- ---     --------}}}\par\pard
\cbpat1{{\cf6{ {0}{5}/{1}{3}/{1}{7} {5}:{2}{9}	mwm			created for the project}}}\par\pard
\cbpat1{{\cf6{****************************************************************************/}}{\cf2{}}}\par\pard
\cbpat1{{\cf6{/*----------------------------- Include Files -----------------------------*/}}{\cf2{}}}\par\pard
\cbpat1{{\cf6{/* include header files for this state machine as well as any machines at the}}}\par\pard
\cbpat1{{\cf6{   next lower level in the hierarchy that are sub-machines to this machine}}}\par\pard
\cbpat1{{\cf6{*/}}{\cf2{}}}\par\pard
\cbpat1{{\cf8{#include}} {\cf9{"ES_Configure.h"}}{\cf8{}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#include}} {\cf9{"ES_Framework.h"}}{\cf8{}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#include}} {\cf9{"DogTXSM.h"}}{\cf8{}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#include}} {\cf9{"Constants.h"}}{\cf8{}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#include}} {\cf9{"I{2}C_Service.h"}}{\cf8{}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{{\cf8{#include}} {\cf9{"inc/hw_memmap.h"}}{\cf8{}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#include}} {\cf9{"inc/hw_types.h"}}{\cf8{}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#include}} {\cf9{"inc/hw_gpio.h"}}{\cf8{}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#include}} {\cf9{"inc/hw_nvic.h"}}{\cf8{}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#include}} {\cf9{"inc/hw_uart.h"}}{\cf8{}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#include}} {\cf9{"inc/hw_sysctl.h"}}{\cf8{}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#include}} {\cf9{"driverlib/sysctl.h"}}{\cf8{}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#include}} {\cf9{"driverlib/pin_map.h"}}{\cf8{}}	{\cf5{// Define PART_TM{4}C{1}{2}{3}GH{6}PM in project}}}\par\pard
\cbpat1{{\cf8{}}{\cf2{}}{\cf8{#include}} {\cf9{"driverlib/gpio.h"}}{\cf8{}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#include}} {\cf9{"driverlib/uart.h"}}{\cf8{}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{{\cf6{/*----------------------------- Module Defines ----------------------------*/}}{\cf2{}}}\par\pard
\cbpat1{}\par\pard
\cbpat1{{\cf6{/*---------------------------- Module Functions ---------------------------*/}}{\cf2{}}}\par\pard
\cbpat1{{\cf6{/* prototypes for private functions for this machine.They should be functions}}}\par\pard
\cbpat1{{\cf6{   relevant to the behavior of this state machine}}}\par\pard
\cbpat1{{\cf6{*/}}{\cf2{}}}\par\pard
\cbpat1{{\cf14{static void}} {\cf2{}}{\cf16{MessageTransmitted}}{\cf2{}}{\cf11{(}} {\cf2{}}{\cf14{void}} {\cf2{}}{\cf11{);}}}\par\pard
\cbpat1{{\cf2{}}{\cf5{//static void ClearMessageArray( void );}}}\par\pard
\cbpat1{{\cf2{}}{\cf14{static void}} {\cf2{}}{\cf16{BuildPacket}}{\cf2{}}{\cf11{(}}{\cf2{}}{\cf14{uint{8}_t}} {\cf2{packetType}}{\cf11{);}}}\par\pard
\cbpat1{{\cf2{}}{\cf14{static void}} {\cf2{}}{\cf16{BuildPreamble}}{\cf2{}}{\cf11{(}}{\cf2{}}{\cf14{void}}{\cf2{}}{\cf11{);}}}\par\pard
\cbpat1{{\cf2{}}{\cf14{static void}} {\cf2{}}{\cf16{BuildPairAck}}{\cf2{}}{\cf11{(}}{\cf2{}}{\cf14{void}}{\cf2{}}{\cf11{);}}}\par\pard
\cbpat1{{\cf2{}}{\cf14{static void}} {\cf2{}}{\cf16{BuildEncrReset}}{\cf2{}}{\cf11{(}}{\cf2{}}{\cf14{void}}{\cf2{}}{\cf11{);}}}\par\pard
\cbpat1{{\cf2{}}{\cf14{static void}} {\cf2{}}{\cf16{BuildStatus}}{\cf2{}}{\cf11{(}}{\cf2{}}{\cf14{void}}{\cf2{}}{\cf11{);}}}\par\pard
\cbpat1{{\cf2{}}{\cf14{static void}} {\cf2{}}{\cf16{calculateChecksum}}{\cf2{}}{\cf11{(}}{\cf2{}}{\cf14{void}}{\cf2{}}{\cf11{);}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{{\cf6{/*---------------------------- Module Variables ---------------------------*/}}{\cf2{}}}\par\pard
\cbpat1{{\cf5{// everybody needs a state variable, you may need others as well.}}}\par\pard
\cbpat1{{\cf2{}}{\cf5{// type of state variable should match htat of enum in header file}}}\par\pard
\cbpat1{{\cf2{}}{\cf14{static}} {\cf2{DogTX_State_t CurrentState}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{{\cf5{// with the introduction of Gen{2}, we need a module level Priority var as well}}}\par\pard
\cbpat1{{\cf2{}}{\cf14{static uint{8}_t}} {\cf2{MyPriority}}{\cf11{,}} {\cf2{MessIndex}}{\cf11{,}} {\cf2{BytesRemaining}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}{\cf14{static uint{8}_t}} {\cf2{DataLength}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}{\cf14{static uint{8}_t}} {\cf2{DataHeader}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}{\cf14{static uint{8}_t}} {\cf2{DestAddrMSB}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}{\cf14{static uint{8}_t}} {\cf2{DestAddrLSB}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}{\cf14{static uint{8}_t}} {\cf2{DataIndex}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}{\cf14{static uint{8}_t}} {\cf2{Message}}{\cf11{[}}{\cf2{TX_MESSAGE_LENGTH}}{\cf11{] = \{}}{\cf2{}}{\cf4{{0}}}{\cf2{}}{\cf11{\};}}}\par\pard
\cbpat1{{\cf2{}}{\cf14{static uint{8}_t}} {\cf2{Checksum}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{{\cf5{//IMU data}}}\par\pard
\cbpat1{{\cf2{}}{\cf14{static uint{8}_t}} {\cf2{AccelX_MSB}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}{\cf14{static uint{8}_t}} {\cf2{AccelX_LSB}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}{\cf14{static uint{8}_t}} {\cf2{AccelY_MSB}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}{\cf14{static uint{8}_t}} {\cf2{AccelY_LSB}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}{\cf14{static uint{8}_t}} {\cf2{AccelZ_MSB}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}{\cf14{static uint{8}_t}} {\cf2{AccelZ_LSB}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{{\cf14{static uint{8}_t}} {\cf2{GyroX_MSB}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}{\cf14{static uint{8}_t}} {\cf2{GyroX_LSB}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}{\cf14{static uint{8}_t}} {\cf2{GyroY_MSB}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}{\cf14{static uint{8}_t}} {\cf2{GyroY_LSB}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}{\cf14{static uint{8}_t}} {\cf2{GyroZ_MSB}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}{\cf14{static uint{8}_t}} {\cf2{GyroZ_LSB}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{{\cf6{/*------------------------------ Module Code ------------------------------*/}}{\cf2{}}}\par\pard
\cbpat1{{\cf6{/****************************************************************************}}}\par\pard
\cbpat1{{\cf6{ Function}}}\par\pard
\cbpat1{{\cf6{     InitDogTXSM}}}\par\pard
\cbpat1{{\cf6{}}}\par\pard
\cbpat1{{\cf6{ Parameters}}}\par\pard
\cbpat1{{\cf6{     uint{8}_t : the priorty of this service}}}\par\pard
\cbpat1{{\cf6{}}}\par\pard
\cbpat1{{\cf6{ Returns}}}\par\pard
\cbpat1{{\cf6{     bool, false if error in initialization, true otherwise}}}\par\pard
\cbpat1{{\cf6{}}}\par\pard
\cbpat1{{\cf6{ Description}}}\par\pard
\cbpat1{{\cf6{     Saves away the priority, sets up the initial transition and does any}}}\par\pard
\cbpat1{{\cf6{     other required initialization for this state machine}}}\par\pard
\cbpat1{{\cf6{ Notes}}}\par\pard
\cbpat1{{\cf6{}}}\par\pard
\cbpat1{{\cf6{ Author}}}\par\pard
\cbpat1{{\cf6{     Matthew W Miller, {5}/{1}{3}/{2}{0}{1}{7}, {1}{7}:{3}{1}}}}\par\pard
\cbpat1{{\cf6{****************************************************************************/}}{\cf2{}}}\par\pard
\cbpat1{{\cf14{bool}} {\cf2{}}{\cf16{InitDogTXSM}} {\cf2{}}{\cf11{(}} {\cf2{}}{\cf14{uint{8}_t}} {\cf2{Priority}} {\cf11{)}}}\par\pard
\cbpat1{{\cf2{}}{\cf11{\{}}}\par\pard
\cbpat1{{\cf2{  ES_Event ThisEvent}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}\par\pard
\cbpat1{  MyPriority}} {\cf11{=}} {\cf2{Priority}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}  {\cf5{// put us into the first state}}}\par\pard
\cbpat1{{\cf2{  CurrentState}} {\cf11{=}} {\cf2{Waiting{2}Transmit}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{	}\par\pard
\cbpat1{  {\cf13{if}} {\cf2{}}{\cf11{(}}{\cf2{}}{\cf16{ES_PostToService}}{\cf2{}}{\cf11{(}} {\cf2{MyPriority}}{\cf11{,}} {\cf2{ThisEvent}}{\cf11{) ==}} {\cf2{}}{\cf13{true}}{\cf2{}}{\cf11{)}}}\par\pard
\cbpat1{{\cf2{}}  {\cf11{\{}}}\par\pard
\cbpat1{{\cf2{}}      {\cf13{return true}}{\cf2{}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}  {\cf11{\}}}{\cf2{}}{\cf13{else}}}\par\pard
\cbpat1{{\cf2{}}  {\cf11{\{}}}\par\pard
\cbpat1{{\cf2{}}      {\cf13{return false}}{\cf2{}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}  {\cf11{\}}}}\par\pard
\cbpat1{{\cf2{}}{\cf11{\}}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{{\cf6{/****************************************************************************}}}\par\pard
\cbpat1{{\cf6{ Function}}}\par\pard
\cbpat1{{\cf6{     PostDogTXSM}}}\par\pard
\cbpat1{{\cf6{}}}\par\pard
\cbpat1{{\cf6{ Parameters}}}\par\pard
\cbpat1{{\cf6{     EF_Event ThisEvent , the event to post to the queue}}}\par\pard
\cbpat1{{\cf6{}}}\par\pard
\cbpat1{{\cf6{ Returns}}}\par\pard
\cbpat1{{\cf6{     boolean False if the Enqueue operation failed, True otherwise}}}\par\pard
\cbpat1{{\cf6{}}}\par\pard
\cbpat1{{\cf6{ Description}}}\par\pard
\cbpat1{{\cf6{     Posts an event to this state machine's queue}}}\par\pard
\cbpat1{{\cf6{ Notes}}}\par\pard
\cbpat1{{\cf6{}}}\par\pard
\cbpat1{{\cf6{ Author}}}\par\pard
\cbpat1{{\cf6{     J. Edward Carryer, {1}{0}/{2}{3}/{1}{1}, {1}{9}:{2}{5}}}}\par\pard
\cbpat1{{\cf6{****************************************************************************/}}{\cf2{}}}\par\pard
\cbpat1{{\cf14{bool}} {\cf2{}}{\cf16{PostDogTXSM}}{\cf2{}}{\cf11{(}} {\cf2{ES_Event ThisEvent}} {\cf11{)}}}\par\pard
\cbpat1{{\cf2{}}{\cf11{\{}}}\par\pard
\cbpat1{{\cf2{}}  {\cf13{return}} {\cf2{}}{\cf16{ES_PostToService}}{\cf2{}}{\cf11{(}} {\cf2{MyPriority}}{\cf11{,}} {\cf2{ThisEvent}}{\cf11{);}}}\par\pard
\cbpat1{{\cf2{}}{\cf11{\}}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{{\cf6{/****************************************************************************}}}\par\pard
\cbpat1{{\cf6{ Function}}}\par\pard
\cbpat1{{\cf6{    RunDogTXSM}}}\par\pard
\cbpat1{{\cf6{}}}\par\pard
\cbpat1{{\cf6{ Parameters}}}\par\pard
\cbpat1{{\cf6{   ES_Event : the event to process}}}\par\pard
\cbpat1{{\cf6{}}}\par\pard
\cbpat1{{\cf6{ Returns}}}\par\pard
\cbpat1{{\cf6{   ES_Event, ES_NO_EVENT if no error ES_ERROR otherwise}}}\par\pard
\cbpat1{{\cf6{}}}\par\pard
\cbpat1{{\cf6{ Description}}}\par\pard
\cbpat1{{\cf6{   add your description here}}}\par\pard
\cbpat1{{\cf6{ Notes}}}\par\pard
\cbpat1{{\cf6{   uses nested switch/case to implement the machine.}}}\par\pard
\cbpat1{{\cf6{ Author}}}\par\pard
\cbpat1{{\cf6{   Matthew Miller, {0}{5}/{1}{3}/{1}{7}, {1}{7}:{5}{4}}}}\par\pard
\cbpat1{{\cf6{****************************************************************************/}}{\cf2{}\par\pard
\cbpat1{ES_Event}} {\cf16{RunDogTXSM}}{\cf2{}}{\cf11{(}} {\cf2{ES_Event ThisEvent}} {\cf11{)}}}\par\pard
\cbpat1{{\cf2{}}{\cf11{\{}}}\par\pard
\cbpat1{{\cf2{  ES_Event ReturnEvent}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{  ReturnEvent}}{\cf11{.}}{\cf2{EventType}} {\cf11{=}} {\cf2{ES_NO_EVENT}}{\cf11{;}} {\cf2{}}{\cf5{// assume no errors}}}\par\pard
\cbpat1{{\cf2{}}	{\cf16{HWREG}}{\cf2{}}{\cf11{(}}{\cf2{GPIO_PORTB_BASE}} {\cf11{+}} {\cf2{ALL_BITS}}{\cf11{) ^= (}}{\cf2{GPIO_PIN_{1}}}{\cf11{);}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{  {\cf13{switch}} {\cf2{}}{\cf11{(}} {\cf2{CurrentState}} {\cf11{)}}}\par\pard
\cbpat1{{\cf2{}}  {\cf11{\{}}}\par\pard
\cbpat1{{\cf2{}}		{\cf5{//Case Waiting{2}Transmit}}}\par\pard
\cbpat1{{\cf2{}}		{\cf13{case}} {\cf2{Waiting{2}Transmit}} {\cf11{:}}	}\par\pard
\cbpat1{{\cf2{}}			{\cf5{//If ThisEvent is ES_SEND_RESPONSE then we want to send something back to the Farmer}}}\par\pard
\cbpat1{{\cf2{}}			{\cf13{if}}{\cf2{}}{\cf11{(}}{\cf2{ThisEvent}}{\cf11{.}}{\cf2{EventType}} {\cf11{==}} {\cf2{ES_SEND_RESPONSE}}{\cf11{)}}}\par\pard
\cbpat1{{\cf2{}}			{\cf11{\{}}}\par\pard
\cbpat1{{\cf2{}}				{\cf16{printf}}{\cf2{}}{\cf11{(}}{\cf2{}}{\cf3{"Dog TX SM -- Waiting{2}Transmit State -- Send Request Received}}{\cf7{\\r\\n}}{\cf3{"}}{\cf2{}}{\cf11{);}}}\par\pard
\cbpat1{{\cf2{}}				{\cf5{//Set CurrentState to Transmit}}}\par\pard
\cbpat1{{\cf2{				CurrentState}} {\cf11{=}} {\cf2{Transmit}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}				{\cf5{//Build the message to send}}}\par\pard
\cbpat1{{\cf2{}}				{\cf16{BuildPacket}}{\cf2{}}{\cf11{(}}{\cf2{DataHeader}}{\cf11{);}}}\par\pard
\cbpat1{{\cf2{}}				{\cf5{//Reset the message counter (packet byte index)}}}\par\pard
\cbpat1{{\cf2{				MessIndex}} {\cf11{=}} {\cf2{}}{\cf4{{0}}}{\cf2{}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{				BytesRemaining}} {\cf11{=}} {\cf2{TX_PREAMBLE_LENGTH}} {\cf11{+}} {\cf2{DataLength}} {\cf11{+}} {\cf2{}}{\cf4{{1}}}{\cf2{}}{\cf11{;}} {\cf2{}}{\cf5{//length of message is preamble + data + checksum}}}\par\pard
\cbpat1{{\cf2{}}				{\cf5{//BytesRemaining = {1}{4};}}}\par\pard
\cbpat1{{\cf2{}}				{\cf5{//if TXFE clear}}}\par\pard
\cbpat1{{\cf2{}}				{\cf13{if}}{\cf2{}}{\cf11{((}}{\cf2{}}{\cf16{HWREG}}{\cf2{}}{\cf11{(}}{\cf2{UART{1}_BASE}}{\cf11{+}}{\cf2{UART_O_FR}}{\cf11{) &}} {\cf2{UART_FR_TXFE}}{\cf11{) !=}} {\cf2{}}{\cf4{{0}}}{\cf2{}}{\cf11{)}}}\par\pard
\cbpat1{{\cf2{}}				{\cf11{\{}}}\par\pard
\cbpat1{{\cf2{}}					{\cf5{//printf("Dog TX SM -- Waiting{2}Transmit State -- First\\r\\n");}}}\par\pard
\cbpat1{{\cf2{}}					{\cf5{//Write first byte of the message to send into the UART data register}}}\par\pard
\cbpat1{{\cf2{}}					{\cf16{HWREG}}{\cf2{}}{\cf11{(}}{\cf2{UART{1}_BASE}}{\cf11{+}}{\cf2{UART_O_DR}}{\cf11{) =}} {\cf2{Message}}{\cf11{[}}{\cf2{MessIndex}}{\cf11{];}}}\par\pard
\cbpat1{{\cf2{}}					{\cf5{//decrement BytesRemaining}}}\par\pard
\cbpat1{{\cf2{					BytesRemaining}}{\cf11{--;}}}\par\pard
\cbpat1{{\cf2{}}					{\cf5{//increment messIndex}}}\par\pard
\cbpat1{{\cf2{					MessIndex}}{\cf11{++;}}}\par\pard
\cbpat1{{\cf2{}}					{\cf5{//if TXFe clear}}}\par\pard
\cbpat1{{\cf2{}}					{\cf13{if}}{\cf2{}}{\cf11{((}}{\cf2{}}{\cf16{HWREG}}{\cf2{}}{\cf11{(}}{\cf2{UART{1}_BASE}}{\cf11{+}}{\cf2{UART_O_FR}}{\cf11{) &}} {\cf2{UART_FR_TXFE}}{\cf11{) !=}} {\cf2{}}{\cf4{{0}}}{\cf2{}}{\cf11{)}}}\par\pard
\cbpat1{{\cf2{}}					{\cf11{\{}}}\par\pard
\cbpat1{{\cf2{}}						{\cf5{//printf("Dog TX SM -- Waiting{2}Transmit State -- Second\\r\\n");}}}\par\pard
\cbpat1{{\cf2{}}						{\cf5{//Write second byte of the message to send into the UART data register}}}\par\pard
\cbpat1{{\cf2{}}						{\cf16{HWREG}}{\cf2{}}{\cf11{(}}{\cf2{UART{1}_BASE}}{\cf11{+}}{\cf2{UART_O_DR}}{\cf11{) =}} {\cf2{Message}}{\cf11{[}}{\cf2{MessIndex}}{\cf11{];}}}\par\pard
\cbpat1{{\cf2{}}						{\cf5{//decrement BytesRemaining}}}\par\pard
\cbpat1{{\cf2{						BytesRemaining}}{\cf11{--;}}}\par\pard
\cbpat1{{\cf2{}}						{\cf5{//increment messIndex}}}\par\pard
\cbpat1{{\cf2{						MessIndex}}{\cf11{++;}}}\par\pard
\cbpat1{{\cf2{}}					{\cf11{\}}}}\par\pard
\cbpat1{{\cf2{}}					{\cf5{//Enable Tx interrupts in the UART}}}\par\pard
\cbpat1{{\cf2{}}					{\cf16{HWREG}}{\cf2{}}{\cf11{(}}{\cf2{UART{1}_BASE}} {\cf11{+}} {\cf2{UART_O_IM}}{\cf11{) =}} {\cf2{}}{\cf16{HWREG}}{\cf2{}}{\cf11{(}}{\cf2{UART{1}_BASE}} {\cf11{+}} {\cf2{UART_O_IM}}{\cf11{) |}} {\cf2{UART_IM_TXIM}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}				{\cf11{\}}}}\par\pard
\cbpat1{{\cf2{}}			{\cf11{\}}}}\par\pard
\cbpat1{{\cf2{}}			}\par\pard
\cbpat1{			{\cf13{break}}{\cf2{}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{		{\cf5{//Case Transmit}}}\par\pard
\cbpat1{{\cf2{}}		{\cf13{case}} {\cf2{Transmit}} {\cf11{:}}}\par\pard
\cbpat1{{\cf2{}}			{\cf5{//If ThisEvent is ES_TRANSMIT_COMPLETE}}}\par\pard
\cbpat1{{\cf2{}}			{\cf13{if}}{\cf2{}}{\cf11{(}}{\cf2{ThisEvent}}{\cf11{.}}{\cf2{EventType}} {\cf11{==}} {\cf2{ES_TRANSMIT_COMPLETE}}{\cf11{)}}}\par\pard
\cbpat1{{\cf2{}}			{\cf11{\{}}}\par\pard
\cbpat1{{\cf2{}}				{\cf16{printf}}{\cf2{}}{\cf11{(}}{\cf2{}}{\cf3{"Dog TX SM -- Transmit State -- TRANSMIT COMPLETE}}{\cf7{\\r\\n}}{\cf3{"}}{\cf2{}}{\cf11{);}}}\par\pard
\cbpat1{{\cf2{}}				{\cf5{//Set CurrentState to Waiting{2}Transmit}}}\par\pard
\cbpat1{{\cf2{				CurrentState}} {\cf11{=}} {\cf2{Waiting{2}Transmit}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}				{\cf16{MessageTransmitted}}{\cf2{}}{\cf11{();}}}\par\pard
\cbpat1{{\cf2{}}			{\cf11{\}}}}\par\pard
\cbpat1{{\cf2{}}			{\cf13{break}}{\cf2{}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}    {\cf13{default}} {\cf2{}}{\cf11{:}}}\par\pard
\cbpat1{{\cf2{}}      {\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}  {\cf11{\}}}  {\cf2{}}{\cf5{// end switch on Current State}}}\par\pard
\cbpat1{{\cf2{}}  {\cf13{return}} {\cf2{ReturnEvent}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}{\cf11{\}}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{{\cf6{/****************************************************************************}}}\par\pard
\cbpat1{{\cf6{ Function}}}\par\pard
\cbpat1{{\cf6{     QueryDogTXSM}}}\par\pard
\cbpat1{{\cf6{}}}\par\pard
\cbpat1{{\cf6{ Parameters}}}\par\pard
\cbpat1{{\cf6{     None}}}\par\pard
\cbpat1{{\cf6{}}}\par\pard
\cbpat1{{\cf6{ Returns}}}\par\pard
\cbpat1{{\cf6{     DogTX_State_t The current state of the Template state machine}}}\par\pard
\cbpat1{{\cf6{}}}\par\pard
\cbpat1{{\cf6{ Description}}}\par\pard
\cbpat1{{\cf6{     returns the current state of the Template state machine}}}\par\pard
\cbpat1{{\cf6{ Notes}}}\par\pard
\cbpat1{{\cf6{}}}\par\pard
\cbpat1{{\cf6{ Author}}}\par\pard
\cbpat1{{\cf6{Matthew Miller, {5}/{1}{3}/{1}{7}, {2}{2}:{4}{2}}}}\par\pard
\cbpat1{{\cf6{****************************************************************************/}}{\cf2{}\par\pard
\cbpat1{DogTX_State_t}} {\cf16{QueryDogTXSM}} {\cf2{}}{\cf11{(}} {\cf2{}}{\cf14{void}} {\cf2{}}{\cf11{)}}}\par\pard
\cbpat1{{\cf2{}}{\cf11{\{}}}\par\pard
\cbpat1{{\cf2{}}   {\cf13{return}}{\cf2{}}{\cf11{(}}{\cf2{CurrentState}}{\cf11{);}}}\par\pard
\cbpat1{{\cf2{}}{\cf11{\}}}}\par\pard
\cbpat1{{\cf2{}}{\cf6{/****************************************************************************}}}\par\pard
\cbpat1{{\cf6{ Function}}}\par\pard
\cbpat1{{\cf6{     DogTX_ISR}}}\par\pard
\cbpat1{{\cf6{}}}\par\pard
\cbpat1{{\cf6{ Parameters}}}\par\pard
\cbpat1{{\cf6{     None}}}\par\pard
\cbpat1{{\cf6{}}}\par\pard
\cbpat1{{\cf6{ Returns}}}\par\pard
\cbpat1{{\cf6{     The interrupt response for the UART receive}}}\par\pard
\cbpat1{{\cf6{}}}\par\pard
\cbpat1{{\cf6{ Description}}}\par\pard
\cbpat1{{\cf6{     stores the received byte into the data}}}\par\pard
\cbpat1{{\cf6{ Notes}}}\par\pard
\cbpat1{{\cf6{}}}\par\pard
\cbpat1{{\cf6{ Author}}}\par\pard
\cbpat1{{\cf6{Matthew Miller, {5}/{1}{3}/{1}{7}, {2}{2}:{4}{2}}}}\par\pard
\cbpat1{{\cf6{****************************************************************************/}}{\cf2{}}}\par\pard
\cbpat1{{\cf14{void}} {\cf2{}}{\cf16{DogTX_ISR}}{\cf2{}}{\cf11{(}} {\cf2{}}{\cf14{void}} {\cf2{}}{\cf11{)\{}}}\par\pard
\cbpat1{{\cf2{}}	{\cf5{//printf(".");}}}\par\pard
\cbpat1{{\cf2{}}	{\cf5{//Write next byte of message }}}\par\pard
\cbpat1{{\cf2{}}	{\cf16{HWREG}}{\cf2{}}{\cf11{(}}{\cf2{UART{1}_BASE}}{\cf11{+}}{\cf2{UART_O_DR}}{\cf11{) =}} {\cf2{Message}}{\cf11{[}}{\cf2{MessIndex}}{\cf11{];}}}\par\pard
\cbpat1{{\cf2{}}	}\par\pard
\cbpat1{	{\cf5{//Decrement BytesRemaining}}}\par\pard
\cbpat1{{\cf2{	BytesRemaining}}{\cf11{--;}}}\par\pard
\cbpat1{{\cf2{}}	}\par\pard
\cbpat1{	{\cf5{//Increment messIndex}}}\par\pard
\cbpat1{{\cf2{	MessIndex}}{\cf11{++;}}}\par\pard
\cbpat1{{\cf2{}}	}\par\pard
\cbpat1{	{\cf5{//If BytesRemaining is {0}}}}\par\pard
\cbpat1{{\cf2{}}	{\cf13{if}}{\cf2{}}{\cf11{(}}{\cf2{BytesRemaining}} {\cf11{==}} {\cf2{}}{\cf4{{0}}}{\cf2{}}{\cf11{)\{}}}\par\pard
\cbpat1{{\cf2{}}		{\cf5{//Disable interrupt on TX}}}\par\pard
\cbpat1{{\cf2{}}		{\cf16{HWREG}}{\cf2{}}{\cf11{(}}{\cf2{UART{1}_BASE}} {\cf11{+}} {\cf2{UART_O_IM}}{\cf11{) =}} {\cf2{}}{\cf16{HWREG}}{\cf2{}}{\cf11{(}}{\cf2{UART{1}_BASE}} {\cf11{+}} {\cf2{UART_O_IM}}{\cf11{) & ~}}{\cf2{UART_IM_TXIM}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}		}\par\pard
\cbpat1{		{\cf5{//Post ES_TRANSMIT_COMPLETE event}}}\par\pard
\cbpat1{{\cf2{		ES_Event ReturnEvent}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{		ReturnEvent}}{\cf11{.}}{\cf2{EventType}} {\cf11{=}} {\cf2{ES_TRANSMIT_COMPLETE}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}		{\cf16{PostDogTXSM}}{\cf2{}}{\cf11{(}}{\cf2{ReturnEvent}}{\cf11{);}}}\par\pard
\cbpat1{{\cf2{}}	{\cf11{\}}}}\par\pard
\cbpat1{{\cf2{}}{\cf11{\}}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{{\cf14{void}} {\cf2{}}{\cf16{setDogDataHeader}}{\cf2{}}{\cf11{(}}{\cf2{}}{\cf14{uint{8}_t}} {\cf2{Header}}{\cf11{)}}}\par\pard
\cbpat1{{\cf2{}}{\cf11{\{}}}\par\pard
\cbpat1{{\cf2{}}	{\cf5{//Set DataHeader to Header}}}\par\pard
\cbpat1{{\cf2{	DataHeader}} {\cf11{=}} {\cf2{Header}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}	}\par\pard
\cbpat1{	{\cf5{//If DataHeader is PAIR_ACK}}}\par\pard
\cbpat1{{\cf2{}}	{\cf13{if}}{\cf2{}}{\cf11{(}}{\cf2{DataHeader}} {\cf11{==}} {\cf2{PAIR_ACK}}{\cf11{)}}}\par\pard
\cbpat1{{\cf2{}}	{\cf11{\{}}}\par\pard
\cbpat1{{\cf2{}}		{\cf16{printf}}{\cf2{}}{\cf11{(}}{\cf2{}}{\cf3{"Dog TX SM -- Set Data Header -- PAIR_ACK}}{\cf7{\\r\\n}}{\cf3{"}}{\cf2{}}{\cf11{);}}}\par\pard
\cbpat1{{\cf2{}}		{\cf5{//Set the data length to PAIR_ACK_LENGTH}}}\par\pard
\cbpat1{{\cf2{		DataLength}} {\cf11{=}} {\cf2{PAIR_ACK_LENGTH}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}	{\cf11{\}}}}\par\pard
\cbpat1{{\cf2{}}	{\cf5{//ElseIf DataHeader is ENCR_RESET}}}\par\pard
\cbpat1{{\cf2{}}	{\cf13{else if}}{\cf2{}}{\cf11{(}}{\cf2{DataHeader}} {\cf11{==}} {\cf2{ENCR_RESET}}{\cf11{)}}}\par\pard
\cbpat1{{\cf2{}}	{\cf11{\{}}}\par\pard
\cbpat1{{\cf2{}}		{\cf16{printf}}{\cf2{}}{\cf11{(}}{\cf2{}}{\cf3{"Dog TX SM -- Set Data Header -- ENCR_RESET}}{\cf7{\\r\\n}}{\cf3{"}}{\cf2{}}{\cf11{);}}}\par\pard
\cbpat1{{\cf2{}}		{\cf5{//Set the data length to ENCR_RESET_LENGTH}}}\par\pard
\cbpat1{{\cf2{		DataLength}} {\cf11{=}} {\cf2{ENCR_RESET_LENGTH}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}	{\cf11{\}}}}\par\pard
\cbpat1{{\cf2{}}	{\cf5{//ElseIf DataHeader is STATUS}}}\par\pard
\cbpat1{{\cf2{}}	{\cf13{else if}}{\cf2{}}{\cf11{(}}{\cf2{DataHeader}} {\cf11{==}} {\cf2{STATUS}}{\cf11{)}}}\par\pard
\cbpat1{{\cf2{}}	{\cf11{\{}}}\par\pard
\cbpat1{{\cf2{}}		{\cf16{printf}}{\cf2{}}{\cf11{(}}{\cf2{}}{\cf3{"Dog TX SM -- Set Data Header -- STATUS}}{\cf7{\\r\\n}}{\cf3{"}}{\cf2{}}{\cf11{);}}}\par\pard
\cbpat1{{\cf2{}}		{\cf5{//Set the data length to STATUS_LENGTH}}}\par\pard
\cbpat1{{\cf2{		DataLength}} {\cf11{=}} {\cf2{STATUS_LENGTH}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}	{\cf11{\}}}}\par\pard
\cbpat1{{\cf2{}}	{\cf13{else}}}\par\pard
\cbpat1{{\cf2{}}	{\cf11{\{}}}\par\pard
\cbpat1{{\cf2{}}		{\cf5{//Data header is of unexpected type, print an error message}}}\par\pard
\cbpat1{{\cf2{}}		{\cf16{printf}}{\cf2{}}{\cf11{(}}{\cf2{}}{\cf3{"DOG DATAHEADER SET TO UNEXPECTED MESSAGE TYPE"}}{\cf2{}}{\cf11{);}}}\par\pard
\cbpat1{{\cf2{}}	{\cf11{\}}}{\cf2{}}{\cf5{//EndIf}}}\par\pard
\cbpat1{{\cf2{}}{\cf11{\}}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{{\cf14{void}} {\cf2{}}{\cf16{setDestFarmerAddress}}{\cf2{}}{\cf11{(}}{\cf2{}}{\cf14{uint{8}_t}} {\cf2{AddrMSB}}{\cf11{,}} {\cf2{}}{\cf14{uint{8}_t}} {\cf2{AddrLSB}}{\cf11{)}}}\par\pard
\cbpat1{{\cf2{}}{\cf11{\{}}}\par\pard
\cbpat1{{\cf2{}}	{\cf5{//Set Destination MSB to AddrMSB}}}\par\pard
\cbpat1{{\cf2{	DestAddrMSB}} {\cf11{=}} {\cf2{AddrMSB}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}	{\cf5{//Set Destination LSB to AddrLSB}}}\par\pard
\cbpat1{{\cf2{	DestAddrLSB}} {\cf11{=}} {\cf2{AddrLSB}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}{\cf11{\}}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{{\cf14{uint{8}_t}} {\cf2{}}{\cf16{getDestFarmerAddressLSB}}{\cf2{}}{\cf11{(}} {\cf2{}}{\cf14{void}} {\cf2{}}{\cf11{)\{}}}\par\pard
\cbpat1{{\cf2{}}	{\cf13{return}} {\cf2{DestAddrLSB}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}{\cf11{\}}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{{\cf14{uint{8}_t}} {\cf2{}}{\cf16{getDestFarmerAddressMSB}}{\cf2{}}{\cf11{(}} {\cf2{}}{\cf14{void}} {\cf2{}}{\cf11{)\{}}}\par\pard
\cbpat1{{\cf2{}}	{\cf13{return}} {\cf2{DestAddrMSB}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}{\cf11{\}}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{{\cf6{/***************************************************************************}}}\par\pard
\cbpat1{{\cf6{ private functions}}}\par\pard
\cbpat1{{\cf6{ ***************************************************************************/}}{\cf2{}}}\par\pard
\cbpat1{{\cf14{static void}} {\cf2{}}{\cf16{MessageTransmitted}}{\cf2{}}{\cf11{()\{}}}\par\pard
\cbpat1{{\cf2{}}	}\par\pard
\cbpat1{	{\cf16{printf}}{\cf2{}}{\cf11{(}}{\cf2{}}{\cf3{"Packet length: %i bytes}}{\cf7{\\r\\n}}{\cf3{"}}{\cf2{}}{\cf11{,}} {\cf2{TX_PREAMBLE_LENGTH}}{\cf11{+}}{\cf2{DataLength}}{\cf11{+}}{\cf2{}}{\cf4{{1}}}{\cf2{}}{\cf11{);}}}\par\pard
\cbpat1{{\cf2{}}	{\cf6{/*}}}\par\pard
\cbpat1{{\cf6{	for(int i = {0}; i<(TX_PREAMBLE_LENGTH+DataLength+{1});i++)\{}}}\par\pard
\cbpat1{{\cf6{		printf("TX %i: %{0}{4}x\\r\\n",i,Message[i]);}}}\par\pard
\cbpat1{{\cf6{	\}}}}\par\pard
\cbpat1{{\cf6{	*/}}{\cf2{}}}\par\pard
\cbpat1{	{\cf13{return}}{\cf2{}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}{\cf11{\}}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{{\cf14{static void}} {\cf2{}}{\cf16{BuildPacket}}{\cf2{}}{\cf11{(}}{\cf2{}}{\cf14{uint{8}_t}} {\cf2{packetType}}{\cf11{)}}}\par\pard
\cbpat1{{\cf2{}}{\cf11{\{}}}\par\pard
\cbpat1{{\cf2{}}		{\cf5{//Build the preamble of the packet}}}\par\pard
\cbpat1{{\cf2{}}		{\cf16{BuildPreamble}}{\cf2{}}{\cf11{();}}}\par\pard
\cbpat1{{\cf2{}}		{\cf5{//If packetType is PAIR_ACK}}}\par\pard
\cbpat1{{\cf2{}}		{\cf13{if}}{\cf2{}}{\cf11{(}}{\cf2{packetType}} {\cf11{==}} {\cf2{PAIR_ACK}}{\cf11{)}}}\par\pard
\cbpat1{{\cf2{}}		{\cf11{\{}}}\par\pard
\cbpat1{{\cf2{}}			{\cf5{//Build the rest of the data as a REQ_{2}_PAIR packet}}}\par\pard
\cbpat1{{\cf2{}}			{\cf16{BuildPairAck}}{\cf2{}}{\cf11{();}}}\par\pard
\cbpat1{{\cf2{}}		{\cf11{\}}}}\par\pard
\cbpat1{{\cf2{}}		{\cf5{//Else If packetType is ENCR_RESET}}}\par\pard
\cbpat1{{\cf2{}}		{\cf13{else if}}{\cf2{}}{\cf11{(}}{\cf2{packetType}} {\cf11{==}} {\cf2{ENCR_RESET}}{\cf11{)}}}\par\pard
\cbpat1{{\cf2{}}		{\cf11{\{}}}\par\pard
\cbpat1{{\cf2{}}			{\cf5{//Build the rest of the data as an ENCR_RESET packetType}}}\par\pard
\cbpat1{{\cf2{}}			{\cf16{BuildEncrReset}}{\cf2{}}{\cf11{();}}}\par\pard
\cbpat1{{\cf2{}}		{\cf11{\}}}}\par\pard
\cbpat1{{\cf2{}}		{\cf5{//Else If packetType is CTRL}}}\par\pard
\cbpat1{{\cf2{}}		{\cf13{else if}}{\cf2{}}{\cf11{(}}{\cf2{packetType}} {\cf11{==}} {\cf2{STATUS}}{\cf11{)}}}\par\pard
\cbpat1{{\cf2{}}		{\cf11{\{}}	}\par\pard
\cbpat1{{\cf2{}}			{\cf5{//Build the rest of the data as a status packet}}}\par\pard
\cbpat1{{\cf2{}}			{\cf16{BuildStatus}}{\cf2{}}{\cf11{();}}}\par\pard
\cbpat1{{\cf2{}}		{\cf11{\}}}}\par\pard
\cbpat1{{\cf2{}}		{\cf13{else}} {\cf2{}}{\cf5{//	Else we must have gotten an unexpected packet type}}}\par\pard
\cbpat1{{\cf2{}}		{\cf11{\{}}}\par\pard
\cbpat1{{\cf2{}}			{\cf5{//Print an error message to show we got a bad packet request}}}\par\pard
\cbpat1{{\cf2{}}			{\cf16{printf}}{\cf2{}}{\cf11{(}}{\cf2{}}{\cf3{"UNEXPECTED PACKET TYPE REQUESTED TO TRANSMIT"}}{\cf2{}}{\cf11{);}}}\par\pard
\cbpat1{{\cf2{}}		{\cf11{\}}}}\par\pard
\cbpat1{{\cf2{}}{\cf5{//	EndIf}}}\par\pard
\cbpat1{{\cf2{}}{\cf11{\}}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{}\par\pard
\cbpat1{{\cf14{static void}} {\cf2{}}{\cf16{BuildPreamble}}{\cf2{}}{\cf11{(}}{\cf2{}}{\cf14{void}}{\cf2{}}{\cf11{)}}}\par\pard
\cbpat1{{\cf2{}}{\cf11{\{}}}\par\pard
\cbpat1{{\cf2{}}	{\cf5{//Store START_DELIMITER in byte {0} of PacketArray}}}\par\pard
\cbpat1{{\cf2{	Message}}{\cf11{[}}{\cf2{}}{\cf4{{0}}}{\cf2{}}{\cf11{] =}} {\cf2{START_DELIMITER}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}	{\cf5{//Store PACKET_LENGTH_MSB in byte {1} of PacketArray ({0}x{0}{0})}}}\par\pard
\cbpat1{{\cf2{	Message}}{\cf11{[}}{\cf2{}}{\cf4{{1}}}{\cf2{}}{\cf11{] =}} {\cf2{PACKET_LENGTH_MSB}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}	{\cf5{//Store DataLength in byte {2} of PacketArray	}}}\par\pard
\cbpat1{{\cf2{	Message}}{\cf11{[}}{\cf2{}}{\cf4{{2}}}{\cf2{}}{\cf11{] =}} {\cf2{DataLength}} {\cf11{+}} {\cf2{FRAME_DATA_PREAMBLE_LENGTH}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}	{\cf5{//Store TX_API_IDENTIFIER in byte {3} of PacketArray ({0}x{0}{1})}}}\par\pard
\cbpat1{{\cf2{	Message}}{\cf11{[}}{\cf2{}}{\cf4{{3}}}{\cf2{}}{\cf11{] =}} {\cf2{TX_API_IDENTIFIER}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}	{\cf5{//Store TX_FRAME_ID in byte {4} of PacketArray (Should this be {0}x{0}{0} or a different value?)}}}\par\pard
\cbpat1{{\cf2{	Message}}{\cf11{[}}{\cf2{}}{\cf4{{4}}}{\cf2{}}{\cf11{] =}} {\cf2{TX_FRAME_ID}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}	{\cf5{//Store DestAddrMSB in byte {5} of PacketArray (Write {0}xff to both for broadcast)}}}\par\pard
\cbpat1{{\cf2{	Message}}{\cf11{[}}{\cf2{}}{\cf4{{5}}}{\cf2{}}{\cf11{] =}} {\cf2{DestAddrMSB}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}	{\cf5{//Message[{5}] = {0}x{2}{0};}}}\par\pard
\cbpat1{{\cf2{}}	{\cf5{//Store DestAddrLSB in byte {6} of PacketArray (Write {0}xff to both for broadcast)}}}\par\pard
\cbpat1{{\cf2{	Message}}{\cf11{[}}{\cf2{}}{\cf4{{6}}}{\cf2{}}{\cf11{] =}} {\cf2{DestAddrLSB}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}	{\cf5{//Message[{6}] = {0}x{8}{1};}}}\par\pard
\cbpat1{{\cf2{}}	{\cf5{//Store OPTIONS in byte {7} of PacketArray ({0}x{0}{0})}}}\par\pard
\cbpat1{{\cf2{	Message}}{\cf11{[}}{\cf2{}}{\cf4{{7}}}{\cf2{}}{\cf11{] =}} {\cf2{OPTIONS}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}{\cf11{\}}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{}\par\pard
\cbpat1{{\cf14{static void}} {\cf2{}}{\cf16{BuildPairAck}}{\cf2{}}{\cf11{(}}{\cf2{}}{\cf14{void}}{\cf2{}}{\cf11{)}}}\par\pard
\cbpat1{{\cf2{}}{\cf11{\{}}}\par\pard
\cbpat1{{\cf2{}}	{\cf5{//Set DataIndex to first byte of RF_data (byte {9})}}}\par\pard
\cbpat1{{\cf2{	DataIndex}} {\cf11{=}} {\cf2{TX_PREAMBLE_LENGTH}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}	{\cf5{//Set the {9}th byte of Message to the data header}}}\par\pard
\cbpat1{{\cf2{	Message}}{\cf11{[}}{\cf2{DataIndex}}{\cf11{] =}} {\cf2{DataHeader}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}	}\par\pard
\cbpat1{	{\cf5{//Increment DataIndex}}}\par\pard
\cbpat1{{\cf2{	DataIndex}}{\cf11{++;}}}\par\pard
\cbpat1{{\cf2{}}	{\cf5{//Calculate the Checksum}}}\par\pard
\cbpat1{{\cf2{}}	{\cf16{calculateChecksum}}{\cf2{}}{\cf11{();}}}\par\pard
\cbpat1{{\cf2{}}	{\cf5{//store the checksum in the message array}}}\par\pard
\cbpat1{{\cf2{	Message}}{\cf11{[}}{\cf2{DataIndex}}{\cf11{] =}} {\cf2{Checksum}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}{\cf11{\}}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{}\par\pard
\cbpat1{{\cf14{static void}} {\cf2{}}{\cf16{BuildEncrReset}}{\cf2{}}{\cf11{(}}{\cf2{}}{\cf14{void}}{\cf2{}}{\cf11{)}}}\par\pard
\cbpat1{{\cf2{}}{\cf11{\{}}}\par\pard
\cbpat1{{\cf2{}}	{\cf5{//Set DataIndex to first byte of RF_data (byte {9})}}}\par\pard
\cbpat1{{\cf2{	DataIndex}} {\cf11{=}} {\cf2{TX_PREAMBLE_LENGTH}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}	{\cf5{//Set the {9}th byte of Message to the data header}}}\par\pard
\cbpat1{{\cf2{	Message}}{\cf11{[}}{\cf2{DataIndex}}{\cf11{] =}} {\cf2{DataHeader}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}	}\par\pard
\cbpat1{	{\cf5{//Increment DataIndex}}}\par\pard
\cbpat1{{\cf2{	DataIndex}}{\cf11{++;}}}\par\pard
\cbpat1{{\cf2{}}	{\cf5{//Calculate the Checksum}}}\par\pard
\cbpat1{{\cf2{}}	{\cf16{calculateChecksum}}{\cf2{}}{\cf11{();}}}\par\pard
\cbpat1{{\cf2{}}	{\cf5{//store the checksum in the message array}}}\par\pard
\cbpat1{{\cf2{	Message}}{\cf11{[}}{\cf2{DataIndex}}{\cf11{] =}} {\cf2{Checksum}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}{\cf11{\}}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{}\par\pard
\cbpat1{{\cf14{static void}} {\cf2{}}{\cf16{BuildStatus}}{\cf2{}}{\cf11{(}}{\cf2{}}{\cf14{void}}{\cf2{}}{\cf11{)}}}\par\pard
\cbpat1{{\cf2{}}{\cf11{\{}}}\par\pard
\cbpat1{{\cf2{}}	{\cf5{//Set DataIndex to first byte of RF_data (byte {9})}}}\par\pard
\cbpat1{{\cf2{	DataIndex}} {\cf11{=}} {\cf2{TX_PREAMBLE_LENGTH}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}	{\cf5{//Set the {9}th byte of Message to the data header}}}\par\pard
\cbpat1{{\cf2{	Message}}{\cf11{[}}{\cf2{DataIndex}}{\cf11{] =}} {\cf2{DataHeader}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}	}\par\pard
\cbpat1{	{\cf5{//increment DataIndex}}}\par\pard
\cbpat1{{\cf2{	DataIndex}}{\cf11{++;}}}\par\pard
\cbpat1{{\cf2{}}	{\cf5{//Write next IMU byte to message}}}\par\pard
\cbpat1{{\cf2{	Message}}{\cf11{[}}{\cf2{DataIndex}}{\cf11{] =}} {\cf2{}}{\cf16{getAccelX_MSB}}{\cf2{}}{\cf11{();}} {\cf2{}}{\cf5{//Message[DataIndex] = {0}x{0}{1};//getAccelX_MSB();}}}\par\pard
\cbpat1{{\cf2{}}	}\par\pard
\cbpat1{	{\cf5{//increment DataIndex}}}\par\pard
\cbpat1{{\cf2{	DataIndex}}{\cf11{++;}}}\par\pard
\cbpat1{{\cf2{}}	{\cf5{//Write next IMU byte to message}}}\par\pard
\cbpat1{{\cf2{	Message}}{\cf11{[}}{\cf2{DataIndex}}{\cf11{] =}} {\cf2{}}{\cf16{getAccelX_LSB}}{\cf2{}}{\cf11{();}} {\cf2{}}{\cf5{//Message[DataIndex] = {0}x{0}{2};//getAccelX_LSB();}}}\par\pard
\cbpat1{{\cf2{}}	}\par\pard
\cbpat1{	{\cf5{//increment DataIndex}}}\par\pard
\cbpat1{{\cf2{	DataIndex}}{\cf11{++;}}}\par\pard
\cbpat1{{\cf2{}}	{\cf5{//Write next IMU byte to message}}}\par\pard
\cbpat1{{\cf2{	Message}}{\cf11{[}}{\cf2{DataIndex}}{\cf11{] =}} {\cf2{}}{\cf16{getAccelY_MSB}}{\cf2{}}{\cf11{();}} {\cf2{}}{\cf5{//Message[DataIndex] = {0}x{0}{3};//getAccelY_MSB();}}}\par\pard
\cbpat1{{\cf2{}}	}\par\pard
\cbpat1{	{\cf5{//increment DataIndex}}}\par\pard
\cbpat1{{\cf2{	DataIndex}}{\cf11{++;}}}\par\pard
\cbpat1{{\cf2{}}	{\cf5{//Write next IMU byte to message}}}\par\pard
\cbpat1{{\cf2{	Message}}{\cf11{[}}{\cf2{DataIndex}}{\cf11{] =}} {\cf2{}}{\cf16{getAccelY_LSB}}{\cf2{}}{\cf11{();}} {\cf2{}}{\cf5{//Message[DataIndex] = {0}x{0}{4};//getAccelY_LSB();}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{	{\cf5{//increment DataIndex}}}\par\pard
\cbpat1{{\cf2{	DataIndex}}{\cf11{++;}}}\par\pard
\cbpat1{{\cf2{}}	{\cf5{//Write next IMU byte to message}}}\par\pard
\cbpat1{{\cf2{	Message}}{\cf11{[}}{\cf2{DataIndex}}{\cf11{] =}} {\cf2{}}{\cf16{getAccelZ_MSB}}{\cf2{}}{\cf11{();}} {\cf2{}}{\cf5{//Message[DataIndex] = {0}x{0}{5};//getAccelZ_MSB();}}}\par\pard
\cbpat1{{\cf2{}}	}\par\pard
\cbpat1{	{\cf5{//increment DataIndex}}}\par\pard
\cbpat1{{\cf2{	DataIndex}}{\cf11{++;}}}\par\pard
\cbpat1{{\cf2{}}	{\cf5{//Write next IMU byte to message}}}\par\pard
\cbpat1{{\cf2{	Message}}{\cf11{[}}{\cf2{DataIndex}}{\cf11{] =}} {\cf2{}}{\cf16{getAccelZ_LSB}}{\cf2{}}{\cf11{();}} {\cf2{}}{\cf5{//Message[DataIndex] = {0}x{0}{6};//getAccelZ_LSB();	}}}\par\pard
\cbpat1{{\cf2{}}	}\par\pard
\cbpat1{	{\cf5{//increment DataIndex}}}\par\pard
\cbpat1{{\cf2{	DataIndex}}{\cf11{++;}}}\par\pard
\cbpat1{{\cf2{}}	{\cf5{//Write next IMU byte to message}}}\par\pard
\cbpat1{{\cf2{	Message}}{\cf11{[}}{\cf2{DataIndex}}{\cf11{] =}} {\cf2{}}{\cf16{getGyroX_MSB}}{\cf2{}}{\cf11{();}}{\cf2{}}{\cf5{//Message[DataIndex] = {0}x{0}{7};//getGyroX_MSB();}}}\par\pard
\cbpat1{{\cf2{}}	}\par\pard
\cbpat1{	{\cf5{//increment DataIndex}}}\par\pard
\cbpat1{{\cf2{	DataIndex}}{\cf11{++;}}}\par\pard
\cbpat1{{\cf2{}}	{\cf5{//Write next IMU byte to message}}}\par\pard
\cbpat1{{\cf2{	Message}}{\cf11{[}}{\cf2{DataIndex}}{\cf11{] =}} {\cf2{}}{\cf16{getGyroX_LSB}}{\cf2{}}{\cf11{();}} {\cf2{}}{\cf5{//Message[DataIndex] = {0}x{0}{8};//getGyroX_LSB();}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{	{\cf5{//increment DataIndex}}}\par\pard
\cbpat1{{\cf2{	DataIndex}}{\cf11{++;}}}\par\pard
\cbpat1{{\cf2{}}	{\cf5{//Write next IMU byte to message}}}\par\pard
\cbpat1{{\cf2{	Message}}{\cf11{[}}{\cf2{DataIndex}}{\cf11{] =}} {\cf2{}}{\cf16{getGyroY_MSB}}{\cf2{}}{\cf11{();}} {\cf2{}}{\cf5{//Message[DataIndex] = {0}x{0}{9};//getGyroY_MSB();}}}\par\pard
\cbpat1{{\cf2{}}	}\par\pard
\cbpat1{	{\cf5{//increment DataIndex}}}\par\pard
\cbpat1{{\cf2{	DataIndex}}{\cf11{++;}}}\par\pard
\cbpat1{{\cf2{}}	{\cf5{//Write next IMU byte to message}}}\par\pard
\cbpat1{{\cf2{	Message}}{\cf11{[}}{\cf2{DataIndex}}{\cf11{] =}} {\cf2{}}{\cf16{getGyroY_LSB}}{\cf2{}}{\cf11{();}} {\cf2{}}{\cf5{//Message[DataIndex] = {0}x{0}A;//getGyroY_LSB();}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{	{\cf5{//increment DataIndex}}}\par\pard
\cbpat1{{\cf2{	DataIndex}}{\cf11{++;}}}\par\pard
\cbpat1{{\cf2{}}	{\cf5{//Write next IMU byte to message}}}\par\pard
\cbpat1{{\cf2{	Message}}{\cf11{[}}{\cf2{DataIndex}}{\cf11{] =}} {\cf2{}}{\cf16{getGyroZ_MSB}}{\cf2{}}{\cf11{();}} {\cf2{}}{\cf5{//Message[DataIndex] = {0}x{0}B;//getGyroZ_MSB();}}}\par\pard
\cbpat1{{\cf2{}}	}\par\pard
\cbpat1{	{\cf5{//increment DataIndex}}}\par\pard
\cbpat1{{\cf2{	DataIndex}}{\cf11{++;}}}\par\pard
\cbpat1{{\cf2{}}	{\cf5{//Write next IMU byte to message}}}\par\pard
\cbpat1{{\cf2{	Message}}{\cf11{[}}{\cf2{DataIndex}}{\cf11{] =}} {\cf2{}}{\cf16{getGyroZ_LSB}}{\cf2{}}{\cf11{();}} {\cf2{}}{\cf5{//Message[DataIndex] = {0}x{0}C; //getGyroZ_LSB();}}}\par\pard
\cbpat1{{\cf2{}}	}\par\pard
\cbpat1{	{\cf5{//Increment DataIndex}}}\par\pard
\cbpat1{{\cf2{	DataIndex}}{\cf11{++;}}}\par\pard
\cbpat1{{\cf2{}}	{\cf5{//Calculate the Checksum}}}\par\pard
\cbpat1{{\cf2{}}	{\cf16{calculateChecksum}}{\cf2{}}{\cf11{();}}}\par\pard
\cbpat1{{\cf2{}}	{\cf5{//store the checksum in the message array}}}\par\pard
\cbpat1{{\cf2{	Message}}{\cf11{[}}{\cf2{DataIndex}}{\cf11{] =}} {\cf2{Checksum}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}{\cf11{\}}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{}\par\pard
\cbpat1{{\cf14{static void}} {\cf2{}}{\cf16{calculateChecksum}}{\cf2{}}{\cf11{(}}{\cf2{}}{\cf14{void}}{\cf2{}}{\cf11{)}} {\cf2{}}{\cf5{//probably don't need this since GenCheckSum exists}}}\par\pard
\cbpat1{{\cf2{}}{\cf11{\{}}}\par\pard
\cbpat1{{\cf2{}}	{\cf5{//local variable Sum}}}\par\pard
\cbpat1{{\cf2{}}	{\cf14{uint{8}_t}} {\cf2{Sum}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}	{\cf5{//local variable Index}}}\par\pard
\cbpat1{{\cf2{}}	{\cf14{uint{8}_t}} {\cf2{Index}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}	{\cf5{//local variable FrameDataLength}}}\par\pard
\cbpat1{{\cf2{}}	{\cf14{uint{8}_t}}	{\cf2{FrameDataLength}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{	{\cf5{//Initialize Sum to {0}}}}\par\pard
\cbpat1{{\cf2{	Sum}} {\cf11{=}} {\cf2{}}{\cf4{{0}}}{\cf2{}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{	{\cf5{//Set FrameDataLength to DataLength + FRAME_DATA_PREAMBLE_LENGTH ({5})	}}}\par\pard
\cbpat1{{\cf2{	FrameDataLength}} {\cf11{=}} {\cf2{DataLength}} {\cf11{+}} {\cf2{FRAME_DATA_PREAMBLE_LENGTH}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{	{\cf5{//Loop FrameDataLength times}}}\par\pard
\cbpat1{{\cf2{}}	{\cf5{//start Index at {3} (where the frame data begins_}}}\par\pard
\cbpat1{{\cf2{}}	{\cf13{for}}{\cf2{}}{\cf11{(}}{\cf2{Index}} {\cf11{=}} {\cf2{FRAME_DATA_START}}{\cf11{;}} {\cf2{Index}} {\cf11{<}} {\cf2{FRAME_DATA_START}} {\cf11{+}} {\cf2{FrameDataLength}}{\cf11{;}} {\cf2{Index}}{\cf11{++)}}}\par\pard
\cbpat1{{\cf2{}}	{\cf11{\{}}}\par\pard
\cbpat1{{\cf2{}}		{\cf5{//Add element Index of PacketArray to Sum}}}\par\pard
\cbpat1{{\cf2{		Sum}} {\cf11{+=}} {\cf2{Message}}{\cf11{[}}{\cf2{Index}}{\cf11{];}}}\par\pard
\cbpat1{{\cf2{}}		{\cf5{//printf("CurrentSum = %i\\r\\n",Sum);}}}\par\pard
\cbpat1{{\cf2{}}	{\cf11{\}}}{\cf2{}}{\cf5{//End Loop}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{	{\cf5{//Subtract Sum from {0}xff and store in Checksum}}}\par\pard
\cbpat1{{\cf2{	Checksum}} {\cf11{=}} {\cf2{}}{\cf4{{0}xFF}} {\cf2{}}{\cf11{-}} {\cf2{Sum}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}{\cf11{\}}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{}\par\pard
\cbpat1{}\par\pard
\cbpat1{}}
